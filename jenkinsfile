pipeline {
    agent any
    
    environment {
        AWS_ACCESS_KEY_ID = credentials('ce31b006-0622-4767-8c3f-398c9d0b49f0') // Use the correct Jenkins credentials ID
        AWS_SECRET_ACCESS_KEY = credentials('7879b89f-461b-4f7e-a136-d008a98b59ae') // Use the correct Jenkins credentials ID
    }
    
    stages {
        stage('Fetch Latest Code') {
            steps {
                git branch: 'master', url: 'https://github.com/MadhumithaRJ/jenkins-terraform.git'
            }
        }

        stage('TF Init and Plan') {
            steps {
                sh 'terraform init'
                sh 'terraform plan'
            }
        }

        stage('Approval') {
            steps {
                script {
                    def userInput = input(
                        id: 'Approval',
                        message: 'Approve the deployment?',
                        parameters: [
                            choice(name: 'Deploy', choices: ['Yes', 'No'], description: 'Do you want to proceed with deployment?')
                        ]
                    )
                    
                    if (userInput == 'No') {
                        error 'Deployment aborted by the user'
                    }
                }
            }
        }

        stage('TF Apply') {
            steps {
                sh 'terraform apply -auto-approve'
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}














            
